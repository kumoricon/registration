spring.datasource.url=jdbc:postgresql://localhost:5432/registrationtraining
spring.datasource.username=registrationtraining
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.hikari.maximum-pool-size=30

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.sql.init.schema-locations=classpath:database/schema.sql
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true

# Store sessions in database
spring.session.store-type=jdbc
spring.session.jdbc.initialize-schema=always
# Sessions time out after 30 minutes of inactivity
spring.session.timeout=1800
server.servlet.session.timeout=1800

server.jetty.max-http-form-post-size=20MB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.enabled=true

# Server
#
# Server port number (default 8080)
server.port = 8080

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Enable browser caching for public resources (CSS, JS, etc) (but not private resources!)
# Maximum time the response should be cached (in seconds)
spring.web.resources.cache.cachecontrol.max-age=120
# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.web.resources.cache.cachecontrol.must-revalidate=true
# The resources are private and intended for a single user. They must not be stored by a shared cache (e.g CDN).
spring.web.resources.cache.cachecontrol.cache-private=false
# The resources are public and any cache may store the response.
spring.web.resources.cache.cachecontrol.cache-public=true

server.http2.enabled=true

# Required to work properly with (AWS) load balancers, otherwise redirects would be sent to http://... instead of
# https://...
server.forward-headers-strategy=native

# Logging
logging.pattern.console=${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %X{user} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
logging.pattern.file=${FILE_LOG_PATTERN:%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %X{user} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
#logging.file=registration.log
#logging.level.org.springframework.security=DEBUG    # Useful for debugging Spring Security

# Start server in training mode, which creates an extra set of users with default permissions and displays the
# "training mode" banner
kumoreg.trainingMode=true

# The default password for new users
kumoreg.defaultPassword=test
# Force new users to change their password after logging in
kumoreg.forcePasswordChange=false


# Print badges from server (via CUPS)
kumoreg.printing.enablePrintingFromServer=false

# Where to look for Attendee/Guest of Honor badge import files
registration.attendeeImportPath=/opt/registration/data/import
registration.attendeeImportGlob=attendee*.json
registration.onlineDLQPath=/opt/registration/data/importDLQ
staff.file.uploaddir=/opt/registration/data/staffUpload

staffbadge.mascotfilename=kumoricon_2022-mascot_chibi.png

staff.onlineImportPath=/opt/registration/data/import
staff.onlineImportGlob=staff*.json
staff.onlineDLQPath=/opt/registration/data/importDLQ

staffbadge.badgeimagepath=/opt/registration/data/badgeImage
staffbadge.badgeresourcepath=/opt/registration/data/badgeResource
staffbadge.fontfilename=Myriad Pro Bold.ttf
# Start badge numbers at this number
badge.startingBadgeNumber = 21026


# Require photo during staff check in. Used for testing on machines
# that don't have a webcam. May be overridden at runtime
staff.requirePhoto=true

inLineRegistration.privateKey=/opt/registration/in-line-registration-private.pem
inLineRegistration.onlineImportPath=/opt/registration/data/import
inLineRegistration.onlineImportGlob=inline*.json
inLineRegistration.onlineDLQPath=/tmp/registration/data/importDLQ

eventReservation.exportPath=/opt/registration/data/eventReservation

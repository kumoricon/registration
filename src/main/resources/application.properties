spring.datasource.url=jdbc:postgresql://localhost:5432/registration
spring.datasource.username=kumoreg
spring.datasource.password=password
spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.initial-size=5
spring.datasource.max-active=50
spring.datasource.max-idle=15
spring.datasource.min-idle=3
spring.datasource.test-while-idle=true
spring.datasource.test-on-borrow=true
spring.datasource.test-on-connect=true
spring.datasource.validation-query=SELECT 1
spring.datasource.time-between-eviction-runs-millis=5000
spring.datasource.min-evictable-idle-time-millis=60000
spring.datasource.jmx-enabled=true

# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect


spring.datasource.schema=classpath:database/schema.sql
#spring.datasource.data=seed-data.sql
spring.datasource.initialization-mode=always
spring.datasource.continueOnError=true

# Store sessions in database
spring.sessoin.store-type=jdbc
spring.session.jdbc.initialize-schema=always
# Sessions time out after 30 minutes of inactivity
spring.session.timeout=1800
server.servlet.session.timeout=1800

server.jetty.max-http-post-size=20MB
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB
spring.servlet.multipart.enabled=true

# Server
#
# Server port number (default 8080)
server.port = 8080

# Enable response compression
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Enable browser caching for public resources (CSS, JS, etc) (but not private resources!)
# Maximum time the response should be cached (in seconds)
spring.resources.cache.cachecontrol.max-age=120
# The cache must re-validate stale resources with the server. Any expired resources must not be used without re-validating.
spring.resources.cache.cachecontrol.must-revalidate=true
# The resources are private and intended for a single user. They must not be stored by a shared cache (e.g CDN).
spring.resources.cache.cachecontrol.cache-private=false
# The resources are public and any cache may store the response.
spring.resources.cache.cachecontrol.cache-public=true

server.http2.enabled=true

# Required to work properly with (AWS) load balancers, otherwise redirects would be sent to http://... instead of
# https://...
server.use-forward-headers=true

# Logging
logging.pattern.console=${CONSOLE_LOG_PATTERN:%clr(%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %X{user} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
logging.pattern.file=${FILE_LOG_PATTERN:%d{${LOG_DATEFORMAT_PATTERN:yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%t] %-40.40logger{39} : %X{user} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
#logging.file=registration.log

# Start server in training mode, which creates an extra set of users with default permissions and displays the
# "training mode" banner
kumoreg.trainingMode=true

# The default password for new users
kumoreg.defaultPassword=test
# Force new users to change their password after logging in
kumoreg.forcePasswordChange=false

# Print badges from server (via CUPS)
kumoreg.printing.enablePrintingFromServer=true

# Where to look for Guest of Honor badge import files
registration.guestinputpath=/tmp/registration/guestImport
registration.onlinedlqpath=/tmp/registration/guestImportDLQ
staff.file.uploaddir=/tmp/registration/staffUpload

staffbadge.mascotfilename=kumoricon_2021-mascot_first_chibi.png

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
staffreg.file.uploaddir=/tmp/registration/clientUploads


staff.onlineinputpath=/tmp/registration/staffImport
staff.onlinedlqpath=/tmp/registration/staffImportDLQ

staffbadge.badgeimagepath=/tmp/registration/badgeImage
staffbadge.badgeresourcepath=/tmp/registration/badgeResource
#staffbadge.fontfilename=TextMeOne-Regular.ttf
staffbadge.fontfilename=default
# Attempt to print backgrounds on Attendee/Speciality/VIP badges. Used for testing only.
# Staff and Guest of Honor badges always get the background printed
badge.printAttendeeBackgrounds=true

# Start badge numbers at this number
badge.startingBadgeNumber = 1026

# Require photo during staff check in. Used for testing on machines
# that don't have a webcam. May be overridden at runtime
staff.requirePhoto=false

inLineRegistration.privateKey=in-line-registration-private.pem
inLineRegistration.onlineInputPath=/tmp/registration/inLineRegistrationImport
inLineRegistration.onlineDLQPath=/tmp/registration/inLineRegistrationDLQ
